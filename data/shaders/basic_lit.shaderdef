version: 1.0
name: "PBR_Lit_Opaque"

# The source file(s) for the shader program.
dependencies:
  sources:
    - "sources/basic_lit.glsl"
  spirv:
    - "spirv/basic_lit.vert.spv"
    - "spirv/basic_lit.frag.spv"

# Defines the available compile-time features for creating permutations.
features:
  - HAS_ALBEDO_MAP
  - HAS_NORMAL_MAP
  - HAS_METALROUGHNESS_MAP

# The contract between the CPU and the GPU program.
interface:
  vertex_attributes:
    - { location: 0, format: "R32G32B32_SFLOAT", semantic: "POSITION" }
    - { location: 1, format: "R32G32B32_SFLOAT", semantic: "NORMAL" }
    - { location: 2, format: "R32G32_SFLOAT",    semantic: "TEXCOORD_0" }
    # This attribute is now ONLY included in the pipeline's vertex state
    # if the 'HAS_NORMAL_MAP' feature is enabled for the permutation.
    - { location: 3, format: "R32G32B32A32_SFLOAT", semantic: "TANGENT", required_feature: "HAS_NORMAL_MAP" }

  sets:
    # Set 0: Per-Frame Data (globally bound once per frame)
    - set: 0
      bindings:
        - { binding: 0, type: "UniformBuffer", name: "CameraData", stage: "Vertex,Fragment" }

    # Set 1: Per-Material Data (bound when a material is used)
    - set: 1
      bindings:
        - { binding: 0, type: "UniformBuffer", name: "MaterialData", stage: "Fragment" }
        
        # These texture bindings are now conditional on their features being enabled.
        # The engine will only include them in the descriptor set layout for relevant permutations.
        - { binding: 1, type: "CombinedImageSampler", name: "albedoMap",         stage: "Fragment", required_feature: "HAS_ALBEDO_MAP" }
        - { binding: 2, type: "CombinedImageSampler", name: "normalMap",         stage: "Fragment", required_feature: "HAS_NORMAL_MAP" }
        - { binding: 3, type: "CombinedImageSampler", name: "metalRoughnessMap", stage: "Fragment", required_feature: "HAS_METALROUGHNESS_MAP" }
  
  push_constants:
    - { size: 64, stage: "Vertex", name: "ObjectData" }